{"version":3,"sources":["Utils/DrawingUtils.js","CanvasControl/Shared.js","CanvasControl/BackgroundOptions.js","Constants.js","CanvasControl/BrushOptions.js","CanvasControl/DownloadOptions.js","CanvasControl/LayerOptions.js","CanvasControl/CanvasControl.js","LayersDisplay.js","Canvas.js","Utils/UpdateUtils.js","App.js","reportWebVitals.js","index.js"],"names":["drawCommonAll","ctx","path","strokeScale","strokeStyle","lineWidth","beginPath","drawPathCommon","width","height","moveTo","i","length","lineTo","drawPath","stroke","drawPolygon","closePath","drawRectangle","x","y","w","h","rect","drawEllipse","ellipse","Math","abs","PI","drawItem","value","console","error","drawLayer","paths","forEach","drawCanvas","ColorChooser","props","color","setColor","tipText","className","type","onChange","event","target","Transparent","transparent","setTransparent","onClick","BackgroundOptions","backgroundColor","setBackgroundColor","brushes","BrushSizer","brushSize","setBrushSize","Brush","active","brush","setBrush","BrushChooser","brushType","setBrushType","elems","map","index","BrushOptions","Download","aTag","useRef","canvas","document","createElement","getContext","fillStyle","fillRect","ref","href","download","img","toDataURL","replace","current","setAttribute","DownloadOptions","AddLayer","setPaths","setActive","handleChange","useCallback","newPaths","slice","push","LayerOptions","CanvasControl","MiniLayers","handleClick","useEffect","clearRect","LayersDisplay","miniLayers","Background","z-index","ScratchSpace","setPath","handleMouseDown","newPath","buttons","nativeEvent","offsetX","offsetY","handleMouseMove","currPath","updatePath","updateRect","handleMouseUp","onMouseDown","onMouseMove","onMouseUp","Layer","Canvas","useState","id","App","setWidth","setHeight","setDimensions","body","window","base","clientHeight","clientWidth","onresize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9ffb86ed.chunk.js","sourcesContent":["/**\r\n * Lines common to all\r\n * @param {*} ctx \r\n * @param {*} path \r\n * @param {*} strokeScale \r\n */\r\nfunction drawCommonAll(ctx, path, strokeScale) {\r\n    ctx.strokeStyle = path[1];\r\n    ctx.lineWidth = path[2] * strokeScale;\r\n    ctx.beginPath();\r\n}\r\n\r\n/**\r\n * Code common to drawPath and drawPolygon\r\n * @param {*} ctx \r\n * @param {*} width \r\n * @param {*} height \r\n * @param {*} path \r\n */\r\nfunction drawPathCommon(ctx, width, height, path, strokeScale) {\r\n    drawCommonAll(ctx, path, strokeScale);\r\n    ctx.moveTo(path[3][0] * width, path[3][1] * height);\r\n    for (let i = 4; i < path.length; i++) {\r\n        ctx.lineTo(path[i][0] * width, path[i][1] * height);\r\n    }\r\n}\r\n\r\n/**\r\n * Draws a single path\r\n * @param {*} ctx 2d drawing context\r\n * @param {*} path the path to draw [\"path\", color, size, start, additional points]\r\n */\r\nexport function drawPath(ctx, width, height, path, strokeScale = 1) {\r\n    drawPathCommon(ctx, width, height, path, strokeScale);\r\n    ctx.stroke();\r\n}\r\n\r\n/**\r\n * Draws a closed shape\r\n * @param {*} ctx \r\n * @param {*} width \r\n * @param {*} height \r\n * @param {*} path \r\n * @param {*} strokeScale \r\n */\r\nexport function drawPolygon(ctx, width, height, path, strokeScale = 1) {\r\n    drawPathCommon(ctx, width, height, path, strokeScale);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n}\r\n\r\n/**\r\n * Draws a rectangle\r\n * @param {*} ctx \r\n * @param {*} width \r\n * @param {*} height \r\n * @param {*} path \r\n * @param {*} strokeScale \r\n */\r\nexport function drawRectangle(ctx, width, height, path, strokeScale = 1) {\r\n    drawCommonAll(ctx, path, strokeScale);\r\n    const x = path[3][0] * width;\r\n    const y = path[3][1] * height;\r\n    const w = path[4][0] * width - x;\r\n    const h = path[4][1] * height - y;\r\n    ctx.rect(x, y, w, h);\r\n    ctx.stroke();\r\n}\r\n\r\n/**\r\n * Draws an ellipse\r\n * @param {*} ctx \r\n * @param {*} width \r\n * @param {*} height \r\n * @param {*} path \r\n * @param {*} strokeScale \r\n */\r\nexport function drawEllipse(ctx, width, height, path, strokeScale = 1) {\r\n    drawCommonAll(ctx, path, strokeScale);\r\n    const w = (path[4][0] * width - path[3][0] * width) / 2;\r\n    const h = (path[4][1] * height - path[3][1] * height) / 2;\r\n    const x = path[3][0] * width + w;\r\n    const y = path[3][1] * height + h;\r\n    // always draws an unrotated ellipse\r\n    ctx.ellipse(x, y, Math.abs(w), Math.abs(h), 0, 0, 2 * Math.PI);\r\n    ctx.stroke();\r\n}\r\n\r\n/**\r\n * Draws a single item\r\n * @param {*} ctx \r\n * @param {*} width \r\n * @param {*} height \r\n * @param {*} value \r\n * @param {*} strokeScale \r\n */\r\nexport function drawItem(ctx, width, height, value, strokeScale = 1) {\r\n    if (value.length === 0) return;\r\n    switch (value[0]) {\r\n        case(\"Brush\"):\r\n            drawPath(ctx, width, height, value, strokeScale);\r\n            break;\r\n        case(\"Polygon\"):\r\n            drawPolygon(ctx, width, height, value, strokeScale);\r\n            break;\r\n        case(\"Rectangle\"):\r\n            drawRectangle(ctx, width, height, value, strokeScale);\r\n            break;\r\n        case(\"Ellipse\"):\r\n            drawEllipse(ctx, width, height, value, strokeScale);\r\n            break;\r\n        default:\r\n            console.error(\"undefined thingy\");\r\n    }\r\n}\r\n\r\n/**\r\n * Draws all paths of a given layer\r\n * @param {*} ctx \r\n * @param {*} paths \r\n * @param {*} width \r\n * @param {*} height \r\n */\r\nexport function drawLayer(ctx, paths, width, height, strokeScale = 1) {\r\n    if (paths.length === 0) return;\r\n    paths.forEach((value) => {\r\n        drawItem(ctx, width, height, value, strokeScale);\r\n    });\r\n}\r\n\r\n/**\r\n * Draws all layers of a canvas\r\n * @param {*} ctx \r\n * @param {*} paths \r\n * @param {*} width \r\n * @param {*} height \r\n * @param {*} strokeScale \r\n */\r\nexport function drawCanvas(ctx, paths, width, height, strokeScale = 1) {\r\n    paths.forEach((value) => {\r\n        drawLayer(ctx, value, width, height, strokeScale);\r\n    });\r\n}\r\n","/**\r\n * File for function components used by multiple other files\r\n */\r\nimport \"./CanvasControl.css\"\r\n\r\n/**\r\n * Used to choose a color\r\n * @param {*} props \r\n */\r\nexport function ColorChooser(props) {\r\n    const {color, setColor, tipText} = props;\r\n\r\n    function handleChange(event) {\r\n        setColor(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <span className=\"icon-container\">\r\n            <input \r\n                className=\"color-chooser\"\r\n                type=\"color\" \r\n                value={color} \r\n                onChange={handleChange} />\r\n            <span className=\"tooltiptext\">\r\n                {tipText}\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\n","import \"./CanvasControl.css\";\r\nimport {ColorChooser} from \"./Shared\";\r\nimport {BsCheckCircle, BsCircle} from 'react-icons/bs';\r\n\r\n/**\r\n * Choose a transparent background.\r\n * Or not.\r\n * @param {*} props \r\n */\r\nfunction Transparent(props) {\r\n    const {transparent, setTransparent} = props;\r\n\r\n    function handleChange() {\r\n        setTransparent(!transparent);\r\n    }\r\n\r\n    return (\r\n        <span className=\"icon-container\" onClick={handleChange}>\r\n            {transparent ? <BsCheckCircle /> : <BsCircle /> }\r\n            <span className=\"tooltiptext\">Transparent Background?</span>\r\n        </span>\r\n    )\r\n}\r\n\r\n/**\r\n * Contains Options related to Background\r\n * @param {*} props \r\n */\r\nfunction BackgroundOptions(props) {\r\n    const {transparent, setTransparent, backgroundColor, setBackgroundColor} = props;\r\n\r\n    return (\r\n        <span>\r\n            <Transparent transparent={transparent} setTransparent={setTransparent} />\r\n            { !transparent &&\r\n                <ColorChooser\r\n                    color={backgroundColor} \r\n                    setColor={setBackgroundColor}\r\n                    tipText=\"Background Color\" />\r\n            }\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default BackgroundOptions;","import { BsBrush } from 'react-icons/bs';\r\nimport { BiShapePolygon, BiShapeCircle, BiShapeSquare } from 'react-icons/bi';\r\n\r\nexport const brushes = [\r\n    [\"Brush\", <BsBrush />],\r\n    [\"Polygon\", <BiShapePolygon />],\r\n    [\"Ellipse\", <BiShapeCircle />],\r\n    [\"Rectangle\", <BiShapeSquare />]\r\n];\r\n","import \"./CanvasControl.css\";\r\nimport \"./BrushOptions.css\"\r\n\r\nimport {ColorChooser} from \"./Shared\";\r\nimport {brushes} from \"../Constants\";\r\n\r\n/**\r\n * Used to select brush size\r\n * @param {*} props \r\n */\r\nfunction BrushSizer(props) {\r\n    const {brushSize, setBrushSize} = props;\r\n\r\n    function handleChange(event) {\r\n        setBrushSize(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            <label>Brush Size:</label>\r\n            <input type=\"number\" value={brushSize} onChange={handleChange}/>\r\n        </span> \r\n    )\r\n}\r\n\r\n/**\r\n * Brush types\r\n * @param {*} props \r\n */\r\nfunction Brush(props) {\r\n    const {active, brush, setBrush} = props;\r\n\r\n    return (\r\n        <span className=\"brush-container\" onClick={setBrush}>\r\n            {brush[1]}\r\n            {!active &&\r\n                <span className=\"tooltiptext\">\r\n                    {brush[0]}\r\n                </span>\r\n            }\r\n        </span>\r\n    )\r\n}\r\n\r\n/**\r\n * Used to select drawing tool\r\n * @param {*} props \r\n */\r\nfunction BrushChooser(props) {\r\n    const {brushType, setBrushType} = props;\r\n\r\n    const elems = brushes.map((value, index) => {\r\n        return <Brush brush={value} key={index} setBrush={() => setBrushType(value)} />;\r\n    });\r\n\r\n    return (\r\n        <span className=\"brush-chooser\">\r\n            <Brush brush={brushType} setBrush={() => {}} active/>\r\n            <span className=\"brushes\">\r\n                {elems}\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\n\r\n/**\r\n * Options related to the brush\r\n * @param {*} props \r\n */\r\nfunction BrushOptions(props) {\r\n    const {brushSize, \r\n            setBrushSize, \r\n            color, \r\n            setColor, \r\n            brushType, \r\n            setBrushType} = props;\r\n\r\n    return (\r\n        <span>\r\n            <BrushChooser brushType={brushType} setBrushType={setBrushType} />\r\n            <BrushSizer brushSize={brushSize} setBrushSize={setBrushSize} />\r\n            <ColorChooser \r\n                color={color} \r\n                setColor={setColor}\r\n                tipText=\"Brush Color\" />\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default BrushOptions;\r\n","import {useRef} from 'react';\r\nimport {BsDownload} from 'react-icons/bs';\r\n\r\nimport {drawCanvas} from \"../Utils/DrawingUtils\";\r\n\r\nimport \"./CanvasControl.css\"\r\n\r\n/**\r\n * Flattens and downloads image\r\n * @param {*} props \r\n */\r\nfunction Download(props) {\r\n    const {paths, width, height, backgroundColor, transparent} = props;\r\n    const aTag = useRef();\r\n    \r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const ctx = canvas.getContext('2d');\r\n    if (!transparent) {\r\n        ctx.fillStyle = backgroundColor;\r\n        ctx.fillRect(0, 0, width, height);    \r\n    }\r\n    drawCanvas(ctx, paths, width, height);\r\n\r\n    function onClick() {\r\n        const img = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\r\n        aTag.current.setAttribute(\"href\", img);\r\n    }\r\n\r\n    return (\r\n        <a ref={aTag} href=\"/#\" download=\"canvas.png\" className=\"icon-container\">\r\n            <BsDownload onClick={onClick}/>\r\n            <span className=\"tooltiptext\">Download</span>\r\n        </a>\r\n    )\r\n}\r\n\r\n/**\r\n * Options for downloading\r\n * @param {*} props \r\n */\r\nfunction DownloadOptions(props) {\r\n    const {paths, width, height, backgroundColor, transparent} = props;\r\n\r\n    return (\r\n        <span>\r\n            <Download \r\n                paths={paths} \r\n                width={width} \r\n                height={height} \r\n                backgroundColor={backgroundColor}\r\n                transparent={transparent} />\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default DownloadOptions;\r\n","import {useCallback} from 'react';\r\n\r\nimport {BsLayersFill} from 'react-icons/bs';\r\n\r\n/**\r\n * Control for adding a layer\r\n * @param {*} props \r\n */\r\nfunction AddLayer(props) {\r\n    const {paths, setPaths, setActive} = props;\r\n\r\n    const handleChange = useCallback(() => {\r\n        const newPaths = paths.slice();\r\n        newPaths.push([]);\r\n        setActive(newPaths.length - 1);\r\n        setPaths(newPaths);\r\n    }, [paths, setPaths, setActive]);\r\n\r\n    return (\r\n        <span className=\"icon-container\" onClick={handleChange}>\r\n            <BsLayersFill />\r\n            <span className=\"tooltiptext\">Add a Layer</span>\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Contains Options related to layers\r\n * @param {*} props \r\n */\r\nfunction LayerOptions(props) {\r\n    const {paths, setPaths, setActive} = props;\r\n\r\n    return (\r\n        <span>\r\n            <AddLayer \r\n                paths={paths} \r\n                setPaths={setPaths}\r\n                setActive={setActive} />\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default LayerOptions;\r\n","import BackgroundOptions from \"./BackgroundOptions\";\r\nimport BrushOptions from \"./BrushOptions\";\r\nimport DownloadOptions from \"./DownloadOptions\";\r\nimport LayerOptions from \"./LayerOptions\";\r\n\r\nimport \"./CanvasControl.css\";\r\n\r\nfunction CanvasControl(props) {\r\n    const {paths, \r\n            setPaths, \r\n            setActive, \r\n            brushSize, \r\n            setBrushSize, \r\n            color, \r\n            setColor, \r\n            backgroundColor,\r\n            setBackgroundColor,\r\n            transparent,\r\n            setTransparent,\r\n            width, \r\n            height,\r\n            brushType,\r\n            setBrushType} = props;\r\n    return (\r\n        <div className=\"canvas-control\">\r\n            <BackgroundOptions \r\n                transparent={transparent}\r\n                setTransparent={setTransparent}\r\n                backgroundColor={backgroundColor}\r\n                setBackgroundColor={setBackgroundColor} />\r\n            <LayerOptions \r\n                paths={paths} \r\n                setPaths={setPaths}\r\n                setActive={setActive} />\r\n            <BrushOptions\r\n                brushSize={brushSize}\r\n                setBrushSize={setBrushSize}\r\n                brushType={brushType}\r\n                setBrushType={setBrushType}\r\n                color={color}\r\n                setColor={setColor} />\r\n            <DownloadOptions \r\n                paths={paths} \r\n                width={width} \r\n                height={height} \r\n                backgroundColor={backgroundColor}\r\n                transparent={transparent} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CanvasControl;","import {useRef, useEffect, useCallback} from 'react';\r\nimport {drawLayer} from \"./Utils/DrawingUtils\";\r\nimport \"./LayersDisplay.css\"\r\n\r\n/**\r\n * Individual mini-layer\r\n * @param {*} props \r\n */\r\nfunction MiniLayers(props) {\r\n    const {width, height, paths, index, active, setActive} = props;\r\n    const canvas = useRef();\r\n\r\n    const handleClick = useCallback(() => {\r\n        setActive(index);\r\n    }, [setActive, index]);\r\n\r\n    useEffect(() => {\r\n        const ctx = canvas.current.getContext('2d');\r\n        ctx.clearRect(0, 0, width, height);\r\n        drawLayer(ctx, paths[index], width, height, .1);\r\n    }, [paths, width, height, canvas, index]);\r\n\r\n    return (\r\n        <canvas className={`mini-layer ${active && 'active'}`}\r\n            ref={canvas}\r\n            width={width}\r\n            height={height}\r\n            onClick={handleClick}>\r\n        </canvas>\r\n    )\r\n}\r\n\r\n/**\r\n * Display container for mini layers\r\n * @param {*} props \r\n */\r\nfunction LayersDisplay(props) {\r\n    const {paths, width, height, active, setActive} = props;\r\n\r\n    const miniLayers = paths.map((value, index) => {\r\n        return <MiniLayers \r\n                    width={width}\r\n                    height={height}\r\n                    paths={paths}\r\n                    active={active===index}\r\n                    setActive={setActive}\r\n                    index={index} \r\n                    key={index} />\r\n    });\r\n\r\n    return (\r\n        <div className=\"mini-layers-display\">\r\n            {miniLayers}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LayersDisplay;","import {useCallback, useEffect, useRef, useState} from 'react';\r\nimport { drawCanvas, drawItem } from './Utils/DrawingUtils';\r\nimport {updatePath, updateRect} from './Utils/UpdateUtils';\r\nimport CanvasControl from \"./CanvasControl/CanvasControl\";\r\nimport LayersDisplay from \"./LayersDisplay\";\r\nimport \"./Canvas.css\";\r\nimport {brushes} from \"./Constants\";\r\n\r\nfunction Background(props) {\r\n    const {width, height, color, transparent} = props;\r\n    const canvas = useRef();\r\n\r\n    useEffect(() => {\r\n        var ctx = canvas.current.getContext('2d');\r\n        if (!transparent) {\r\n            ctx.fillStyle = color;\r\n            ctx.fillRect(0, 0, width, height);    \r\n        } else {\r\n            ctx.clearRect(0, 0, width, height);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <canvas className='layer'\r\n            ref={canvas}\r\n            z-index={0}\r\n            width={width}\r\n            height={height}>\r\n        </canvas>\r\n    )\r\n\r\n}\r\n\r\n/**\r\n * Area where all drawing will actually happen\r\n * @param {*} props \r\n */\r\nfunction ScratchSpace(props) {\r\n    const {width, \r\n        height, \r\n        color, \r\n        brushSize, \r\n        path, \r\n        setPath, \r\n        paths,\r\n        setPaths,\r\n        index, \r\n        brushType} = props;\r\n    const canvas = useRef();\r\n\r\n    // Path format [type, color, size, start, [points]]\r\n    const handleMouseDown = useCallback((event) => {\r\n        if (event.buttons & 1) {\r\n            var newPath;\r\n            if (brushType[0] === \"Brush\" || brushType[0] === \"Polygon\") {\r\n                newPath = [brushType[0],\r\n                color, brushSize, \r\n                [event.nativeEvent.offsetX / width, \r\n                event.nativeEvent.offsetY / height]];\r\n            } else if (brushType[0] === \"Rectangle\" || brushType[0] === \"Ellipse\") {\r\n                newPath = [brushType[0],\r\n                    color, brushSize, \r\n                    [event.nativeEvent.offsetX / width, \r\n                    event.nativeEvent.offsetY / height],\r\n                    [event.nativeEvent.offsetX / width, \r\n                    event.nativeEvent.offsetY / height]];    \r\n            }\r\n            setPath(newPath);    \r\n        }\r\n    }, [color, brushSize, width, height, setPath, brushType]);\r\n\r\n    // Updates current drawing\r\n    const handleMouseMove = useCallback((event) => {\r\n        if (event.buttons & 1) {\r\n            if (brushType[0] === \"Brush\" || brushType[0] === \"Polygon\") {\r\n                updatePath(event, width, height, path, setPath);\r\n            } else if (brushType[0] === \"Rectangle\"  || brushType[0] === \"Ellipse\") {\r\n                updateRect(event, width, height, path, setPath);\r\n            }\r\n        }\r\n    }, [width, height, path, setPath, brushType]);\r\n\r\n    const handleMouseUp = useCallback((event) => {\r\n        const newPaths = paths.slice();\r\n        const layer = newPaths[index];\r\n        layer.push(path);\r\n        setPaths(newPaths);\r\n        setPath([]);\r\n    }, [path, setPath, paths, setPaths, index]);\r\n\r\n    // Draws on canvas after render\r\n    useEffect(() => {\r\n        const ctx = canvas.current.getContext('2d');\r\n        ctx.clearRect(0, 0, width, height);\r\n        drawItem(ctx, width, height, path);\r\n    }, [path, width, height, canvas]);\r\n\r\n    return (\r\n        <canvas className='layer'\r\n            z-index={2}\r\n            ref={canvas}\r\n            width={width}\r\n            height={height}\r\n            onMouseDown={handleMouseDown} \r\n            onMouseMove={handleMouseMove}\r\n            onMouseUp={handleMouseUp}>\r\n        </canvas>\r\n    )    \r\n}\r\n\r\n/**\r\n * A single layer\r\n * @param {*} props \r\n */\r\nfunction Layer(props) {\r\n    const {width, \r\n            height, \r\n            paths} = props;\r\n    const canvas = useRef();\r\n\r\n    // Draws on canvas after render\r\n    useEffect(() => {\r\n        const ctx = canvas.current.getContext('2d');\r\n        ctx.clearRect(0, 0, width, height);\r\n        drawCanvas(ctx, paths, width, height);\r\n    }, [paths, width, height, canvas]);\r\n\r\n    return (\r\n        <canvas className='layer'\r\n            z-index={1}\r\n            ref={canvas}\r\n            width={width}\r\n            height={height}>\r\n        </canvas>\r\n    )\r\n}\r\n\r\nfunction Canvas(props) {\r\n    const {width, height} = props;\r\n    // const canvas = useRef();\r\n    const [color, setColor] = useState('#000000');\r\n    const [brushSize, setBrushSize] = useState(5);\r\n    const [brushType, setBrushType] = useState(brushes[0]);\r\n    const [path, setPath] = useState([]);\r\n    const [paths, setPaths] = useState([[]]);\r\n    const [active, setActive] = useState(0);\r\n    const [backgroundColor, setBackgroundColor] = useState(\"#ffffff\");\r\n    const [transparent, setTransparent] = useState(true);\r\n\r\n    return (\r\n        <div className=\"canvas\">\r\n            <div className=\"canvas-container\">\r\n                <CanvasControl\r\n                    paths={paths}\r\n                    setPaths={setPaths}\r\n                    setActive={setActive}\r\n                    brushSize={brushSize}\r\n                    setBrushSize={setBrushSize}\r\n                    color={color}\r\n                    setColor={setColor}\r\n                    backgroundColor={backgroundColor}\r\n                    setBackgroundColor={setBackgroundColor}\r\n                    transparent={transparent}\r\n                    setTransparent={setTransparent}\r\n                    width={width}\r\n                    height={height}\r\n                    brushType={brushType}\r\n                    setBrushType={setBrushType}\r\n                />\r\n                <div id=\"layer-container\" width={width * 1.25} height={height * 1.25}>\r\n                    <Background \r\n                        width={width} \r\n                        height={height} \r\n                        color={backgroundColor} \r\n                        transparent={transparent} />\r\n                    <Layer\r\n                        width={width}\r\n                        height={height}\r\n                        paths={paths}\r\n                        index={active} />\r\n                    <ScratchSpace\r\n                        width={width}\r\n                        height={height}\r\n                        color={color}\r\n                        brushSize={brushSize}\r\n                        path={path}\r\n                        setPath={setPath}\r\n                        paths={paths}\r\n                        setPaths={setPaths}\r\n                        index={active}\r\n                        brushType={brushType} />\r\n                </div>\r\n            </div>\r\n            <LayersDisplay \r\n                paths={paths} \r\n                width={width / 10} \r\n                height={height / 10}\r\n                active={active}\r\n                setActive={setActive} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas;","export function updatePath(event, width, height, path, setPath) {\r\n    const currPath = path.slice();\r\n    currPath.push([event.nativeEvent.offsetX / width, \r\n        event.nativeEvent.offsetY / height]);\r\n    setPath(currPath);\r\n}\r\n\r\n/**\r\n * Will also use for ellipse\r\n * @param {*} event \r\n * @param {*} width \r\n * @param {*} height \r\n * @param {*} paths \r\n * @param {*} setPaths \r\n * @param {*} index \r\n */\r\nexport function updateRect(event, width, height, path, setPath) {\r\n    const currPath = path.slice();\r\n    currPath[4] = [event.nativeEvent.offsetX / width, \r\n        event.nativeEvent.offsetY / height];\r\n    setPath(currPath);\r\n}\r\n","import {useEffect, useState} from \"react\";\n\nimport './App.css';\nimport Canvas from './Canvas';\n\nfunction App() {\n  const scale = .75;\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  function setDimensions() {\n    const body = window.document.body\n    const base = body.clientHeight * 1.5 > body.clientWidth ? \n                  body.clientWidth * 2 / 3: body.clientHeight;\n    setWidth(base * scale * 1.5);\n    setHeight(base * scale);           \n  }\n\n  window.onresize = () => {\n    setDimensions()\n  }\n\n  useEffect(() => {\n    setDimensions();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Canvas width={width} height={height} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}